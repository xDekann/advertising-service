-- MySQL Script generated by MySQL Workbench
-- Sun Nov 27 16:39:06 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema serwis_ogloszeniowy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema serwis_ogloszeniowy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `serwis_ogloszeniowy` DEFAULT CHARACTER SET utf8 ;
USE `serwis_ogloszeniowy` ;

-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(70) NOT NULL,
  `enabled` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`authorities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`authorities` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `authority` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`user_auth`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`user_auth` (
  `user_id_auth` INT NOT NULL,
  `role_id_auth` INT NOT NULL,
  INDEX `user_id_auth_idx` (`user_id_auth` ASC) VISIBLE,
  INDEX `role_id_auth_idx` (`role_id_auth` ASC) VISIBLE,
  CONSTRAINT `user_id_auth`
    FOREIGN KEY (`user_id_auth`)
    REFERENCES `serwis_ogloszeniowy`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role_id_auth`
    FOREIGN KEY (`role_id_auth`)
    REFERENCES `serwis_ogloszeniowy`.`authorities` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`user_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`user_details` (
  `user_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  `last_login` DATE NOT NULL,
  INDEX `user_id_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `serwis_ogloszeniowy`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`offers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`offers` (
  `offer_id` INT NOT NULL AUTO_INCREMENT,
  `date_of_creation` DATE NOT NULL,
  `description` LONGTEXT NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `price` FLOAT NOT NULL,
  PRIMARY KEY (`offer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`users_offers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`users_offers` (
  `user_id_offer` INT NOT NULL,
  `offer_id_user` INT NOT NULL,
  INDEX `user_id_offer_idx` (`user_id_offer` ASC) VISIBLE,
  INDEX `offer_id_user_idx` (`offer_id_user` ASC) VISIBLE,
  CONSTRAINT `user_id_offer`
    FOREIGN KEY (`user_id_offer`)
    REFERENCES `serwis_ogloszeniowy`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `offer_id_user`
    FOREIGN KEY (`offer_id_user`)
    REFERENCES `serwis_ogloszeniowy`.`offers` (`offer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`user_report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`user_report` (
  `report_id` INT NOT NULL AUTO_INCREMENT,
  `description` LONGTEXT NOT NULL,
  `reported_user_id` INT NOT NULL,
  `reporting_user_id` INT NOT NULL,
  PRIMARY KEY (`report_id`),
  INDEX `reported_user_id_idx` (`reported_user_id` ASC) VISIBLE,
  CONSTRAINT `reported_user_id`
    FOREIGN KEY (`reported_user_id`)
    REFERENCES `serwis_ogloszeniowy`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`messages` (
  `message_id` INT NOT NULL AUTO_INCREMENT,
  `sender_id` INT NOT NULL,
  `receiver_id` INT NOT NULL,
  `message_date` DATE NOT NULL,
  `message_content` LONGTEXT NOT NULL,
  PRIMARY KEY (`message_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `serwis_ogloszeniowy`.`users_messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `serwis_ogloszeniowy`.`users_messages` (
  `message_id_user` INT NOT NULL,
  `user_id_message` INT NOT NULL,
  INDEX `message_id_user_idx` (`message_id_user` ASC) VISIBLE,
  INDEX `user_id_message_idx` (`user_id_message` ASC) VISIBLE,
  CONSTRAINT `message_id_user`
    FOREIGN KEY (`message_id_user`)
    REFERENCES `serwis_ogloszeniowy`.`messages` (`message_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id_message`
    FOREIGN KEY (`user_id_message`)
    REFERENCES `serwis_ogloszeniowy`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
